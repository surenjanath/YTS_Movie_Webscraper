# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  "0 1 * * *"
    
permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Set Time Zone
      run: |
        export TZ="America/Port_of_Spain"
      shell: bash
      
    - name: execute py script # run main.py
      run: python "YTS_Movie Webscraper.py"
      
    - name: Capture Last Run Information
      id: last-run
      run: |
        current_time_trinidad_tobago=$(TZ="America/Port_of_Spain" date +"%Y-%m-%d %H:%M:%S")
        echo "::set-output name=last_run::$current_time_trinidad_tobago"

      
    - name: Update README
      run: |
        last_run="${{ steps.last-run.outputs.last_run}}"
        sed -i "s/{{last_run_history}}/{{last_run_history}}\n- $last_run/" README.md
      shell: bash
        
    - name: Commit and Push
      run: |
        git config --global user.name ${{ secrets.GitName }}
        git config --global user.email ${{ secrets.GitEmail }}
        git add .  # Add your database file
        git commit -m "Update database"  # Commit changes
    
        # Set up authentication using the GitHub token secret
        git remote set-url origin "https://github.com/$GITHUB_REPOSITORY"
        git config credential.helper "store --file=.git-credentials"
        echo "https://$GH_TOKEN@github.com" > .git-credentials
        git pull
        # Push changes using the GitHub token
        git push
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      
